import pygame
import sys

# Инициализация Pygame
pygame.init()

# Константы
WIDTH, HEIGHT = 500, 500
PLATFORM_SIZE = (50, 10)
PLAYER_SIZE = (20, 20)
PLAYER_SPEED = 50
PLAYER_MOVE = 10

# Цвета
WHITE = (255, 255, 255)
GRAY = (128, 128, 128)
BLUE = (0, 0, 255)

class GameObject:
    def __init__(self, x, y, width, height, color):
        self.rect = pygame.Rect(x, y, width, height)
        self.color = color

    def draw(self, screen):
        pygame.draw.rect(screen, self.color, self.rect)

class Platform(GameObject):
    def __init__(self, x, y):
        super().__init__(x, y, *PLATFORM_SIZE, GRAY)

class Player(GameObject):
    def __init__(self, x, y):
        super().__init__(x, y, *PLAYER_SIZE, BLUE)
        self.speed_y = 0

    def update(self, platforms):
        self.speed_y += 1
        self.rect.y += self.speed_y / 60  # Ускорение падения

        for platform in platforms:
            if self.rect.colliderect(platform.rect):
                self.rect.bottom = platform.rect.top
                self.speed_y = 0

    def move(self, dx):
        self.rect.x += dx

def main():
    screen = pygame.display.set_mode((WIDTH, HEIGHT))
    clock = pygame.time.Clock()

    platforms = []
    player = None

    running = True
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
            elif event.type == pygame.MOUSEBUTTONDOWN:
                if event.button == 1:
                    platforms.append(Platform(event.pos[0], event.pos[1]))
                elif event.button == 3:
                    if player:
                        player.rect.topleft = event.pos
                    else:
                        player = Player(event.pos[0], event.pos[1])

            elif event.type == pygame.KEYDOWN:
                if player:
                    if event.key == pygame.K_LEFT:
                        player.move(-PLAYER_MOVE)
                    elif event.key == pygame.K_RIGHT:
                        player.move(PLAYER_MOVE)

        screen.fill((0, 0, 0))

        for platform in platforms:
            platform.draw(screen)

        if player:
            player.update(platforms)
            player.draw(screen)

        pygame.display.flip()
        clock.tick(60)

    pygame.quit()
    sys.exit()

if __name__ == "__main__":
    main()
